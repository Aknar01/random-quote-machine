{"ast":null,"code":"var _jsxFileName = \"/Users/aknar/Desktop/random-quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\";\nconst App = () => {\n  _s();\n  const getRandomQuote = () => {\n    return quoteArr[Math.floor(Math.random() * quoteArr.length)];\n  };\n  const [quote, setQuote] = useState(getRandomQuote());\n  const [quoteArr, setQuotesArr] = useState([]);\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotesArr(parsedJSON.quotes);\n    console.log(parsedJSON.quotes);\n  };\n  useEffect(() => {\n    fetchQuotes(urlQuote);\n  });\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        children: [\"\\\"\", quote.quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        children: [\"- \", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: encodeURI(`https://twitter.com/intent/tweet?text=${quote.quote}`),\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: handleNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Pr3yxvx8ZOrpMY5JmbzQxp2BfsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","urlQuote","App","_s","getRandomQuote","quoteArr","Math","floor","random","length","quote","setQuote","setQuotesArr","fetchQuotes","url","response","fetch","parsedJSON","json","quotes","console","log","handleNewQuote","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","author","href","encodeURI","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/aknar/Desktop/random-quote-machine/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport './App.scss'\n\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\"\n\nconst App = () => {\n  \n  const getRandomQuote = () => {\n    return quoteArr[Math.floor(Math.random() * quoteArr.length)];\n  };\n  \n  const [quote, setQuote] = useState(getRandomQuote());\n  const [quoteArr, setQuotesArr] = useState([]);\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url)\n    const parsedJSON = await response.json()\n    setQuotesArr(parsedJSON.quotes)\n    console.log(parsedJSON.quotes)\n  }\n  useEffect(() => {\n    fetchQuotes(urlQuote)\n  })\n\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <div id='quote-box'>\n        <p id=\"text\">\"{quote.quote}\"</p>\n        <p id=\"author\">- {quote.author}</p>\n        <a\n          href={encodeURI(`https://twitter.com/intent/tweet?text=${quote.quote}`)}\n          id=\"tweet-quote\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Tweet\n        </a>\n        <button id='new-quote' onClick={handleNewQuote}>New Quote</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,IAAIC,QAAQ,GAAG,oFAAoF;AAEnG,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,QAAQ,CAACI,MAAM,CAAC,CAAC;EAC9D,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACM,cAAc,CAAC,CAAC,CAAC;EACpD,MAAM,CAACC,QAAQ,EAAEO,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMe,WAAW,GAAG,MAAOC,GAAG,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxCN,YAAY,CAACK,UAAU,CAACE,MAAM,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAACE,MAAM,CAAC;EAChC,CAAC;EACDtB,SAAS,CAAC,MAAM;IACdgB,WAAW,CAACZ,QAAQ,CAAC;EACvB,CAAC,CAAC;EAEF,MAAMqB,cAAc,GAAGA,CAAA,KAAM;IAC3BX,QAAQ,CAACP,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC;EAID,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAKyB,EAAE,EAAC,WAAW;MAAAD,QAAA,gBACjBxB,OAAA;QAAGyB,EAAE,EAAC,MAAM;QAAAD,QAAA,GAAC,IAAC,EAACd,KAAK,CAACA,KAAK,EAAC,IAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChC7B,OAAA;QAAGyB,EAAE,EAAC,QAAQ;QAAAD,QAAA,GAAC,IAAE,EAACd,KAAK,CAACoB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC7B,OAAA;QACE+B,IAAI,EAAEC,SAAS,CAAC,yCAAyCtB,KAAK,CAACA,KAAK,EAAE,CAAE;QACxEe,EAAE,EAAC,aAAa;QAChBQ,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAV,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ7B,OAAA;QAAQyB,EAAE,EAAC,WAAW;QAACU,OAAO,EAAEb,cAAe;QAAAE,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA1B,EAAA,CA1CKD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}