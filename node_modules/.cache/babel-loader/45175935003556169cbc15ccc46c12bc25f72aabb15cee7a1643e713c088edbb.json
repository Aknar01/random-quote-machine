{"ast":null,"code":"var _jsxFileName = \"/Users/aknar/Desktop/random-quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport quotes from './assets/quotes.json';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomQuote = () => {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n};\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\";\nconst App = () => {\n  _s();\n  const [quote, setQuote] = useState(getRandomQuote());\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n  useEffect(() => {\n    const fetchQuotes = async urlQuote => {\n      const response = await fetch(urlQuote);\n      const parse = response.json();\n      setQuote(parse);\n    };\n  }, [urlQuote]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        children: [\"\\\"\", quote.quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        children: [\"- \", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: handleNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://twitter.com/intent/tweet\",\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sxwjuqdc6/xwoJa9Q/pCwj1PVf0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","quotes","jsxDEV","_jsxDEV","getRandomQuote","Math","floor","random","length","urlQuote","App","_s","quote","setQuote","handleNewQuote","fetchQuotes","response","fetch","parse","json","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/aknar/Desktop/random-quote-machine/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport quotes from './assets/quotes.json'\nimport './App.scss'\n\nconst getRandomQuote = () => {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n};\n\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\"\n\nconst App = () => {\n  const [quote, setQuote] = useState(getRandomQuote());\n\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n\n  useEffect(() => {\n    const fetchQuotes = async(urlQuote) => {\n      const response = await fetch(urlQuote)\n      const parse = response.json()\n      setQuote(parse)\n    }\n  }, [urlQuote])\n  \n  return (\n    <div className=\"App\">\n      <div id='quote-box'>\n        <p id=\"text\">\"{quote.quote}\"</p>\n        <p id=\"author\">- {quote.author}</p>\n        <button id='new-quote' onClick={handleNewQuote}>New Quote</button>\n        <a\n          href=\"https://twitter.com/intent/tweet\"\n          id=\"tweet-quote\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Tweet\n        </a>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOH,MAAM,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,MAAM,CAACO,MAAM,CAAC,CAAC;AAC1D,CAAC;AAED,IAAIC,QAAQ,GAAG,oFAAoF;AAEnG,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;EAEpD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAACT,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAMN,QAAQ,IAAK;MACrC,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACR,QAAQ,CAAC;MACtC,MAAMS,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC7BN,QAAQ,CAACK,KAAK,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAKmB,EAAE,EAAC,WAAW;MAAAD,QAAA,gBACjBlB,OAAA;QAAGmB,EAAE,EAAC,MAAM;QAAAD,QAAA,GAAC,IAAC,EAACT,KAAK,CAACA,KAAK,EAAC,IAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChCvB,OAAA;QAAGmB,EAAE,EAAC,QAAQ;QAAAD,QAAA,GAAC,IAAE,EAACT,KAAK,CAACe,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCvB,OAAA;QAAQmB,EAAE,EAAC,WAAW;QAACM,OAAO,EAAEd,cAAe;QAAAO,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEvB,OAAA;QACE0B,IAAI,EAAC,kCAAkC;QACvCP,EAAE,EAAC,aAAa;QAChBQ,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAV,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAf,EAAA,CAjCKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}