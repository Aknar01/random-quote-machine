{"ast":null,"code":"var _jsxFileName = \"/Users/aknar/Desktop/random-quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport quotes from './assets/quotes.json';\nimport '../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomQuote = () => {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n};\nfunction App() {\n  _s();\n  const [quote, setQuote] = useState(getRandomQuote());\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      className: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: [\"\\\"\", quote.quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"author\",\n        children: [\"- \", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XwMFc8md08CIAGpd+SmeNILw2rE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","quotes","jsxDEV","_jsxDEV","getRandomQuote","Math","floor","random","length","App","_s","quote","setQuote","handleNewQuote","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","_c","$RefreshReg$"],"sources":["/Users/aknar/Desktop/random-quote-machine/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport quotes from './assets/quotes.json'\nimport '../src/App.css'\n\nconst getRandomQuote = () => {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n};\n\nfunction App() {\n  const [quote, setQuote] = useState(getRandomQuote());\n\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n  };\n\n  return (\n    <div className=\"App\">\n      <div id='quote-box' className=\"quote-box\">\n        <p className=\"quote\">\"{quote.quote}\"</p>\n        <p className=\"author\">- {quote.author}</p>\n        <button onClick={handleNewQuote}>New Quote</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOH,MAAM,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,MAAM,CAACO,MAAM,CAAC,CAAC;AAC1D,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;EAEpD,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAACR,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACED,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA;MAAKa,EAAE,EAAC,WAAW;MAACF,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvCZ,OAAA;QAAGW,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAC,IAAC,EAACJ,KAAK,CAACA,KAAK,EAAC,IAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxCjB,OAAA;QAAGW,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAC,IAAE,EAACJ,KAAK,CAACU,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CjB,OAAA;QAAQmB,OAAO,EAAET,cAAe;QAAAE,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CAhBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}