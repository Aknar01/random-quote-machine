{"ast":null,"code":"var _jsxFileName = \"/Users/aknar/Desktop/random-quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\";\nconst App = () => {\n  _s();\n  const [quoteArr, setQuotesArr] = useState(null);\n  const getRandomQuote = () => {\n    return quoteArr[Math.floor(Math.random() * quotes.length)];\n  };\n  const [quote, setQuote] = useState(getRandomQuote());\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotesArr(parsedJSON.quotes);\n    console.log(parsedJSON.quotes);\n  };\n  useEffect(() => {\n    fetchQuotes(urlQuote);\n  });\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n    let randomInteger = Math.floor(quoteArr.length * Math.random());\n    setQuote(quoteArr[randomInteger].quote);\n    setAuthor(quoteArr[randomInteger].author);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        children: [\"\\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: encodeURI(`https://twitter.com/intent/tweet?text=${quote}`),\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: () => handleNewQuote(),\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"74fNmzxaBgIywc5bq0+/Fi9WIds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","urlQuote","App","_s","quoteArr","setQuotesArr","getRandomQuote","Math","floor","random","quotes","length","quote","setQuote","fetchQuotes","url","response","fetch","parsedJSON","json","console","log","handleNewQuote","randomInteger","setAuthor","author","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","href","encodeURI","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/aknar/Desktop/random-quote-machine/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport './App.scss'\n\nlet urlQuote = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/\"\n\n  \n\n\nconst App = () => {\n  const [quoteArr, setQuotesArr] = useState(null);\n  const getRandomQuote = () => {\n    return quoteArr[Math.floor(Math.random() * quotes.length)];\n  };\n  const [quote, setQuote] = useState(getRandomQuote());\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url)\n    const parsedJSON = await response.json()\n    setQuotesArr(parsedJSON.quotes)\n    console.log(parsedJSON.quotes)\n  }\n\n  useEffect(() => {\n    fetchQuotes(urlQuote)\n  })\n\n  const handleNewQuote = () => {\n    setQuote(getRandomQuote());\n    let randomInteger = Math.floor(quoteArr.length * Math.random())\n    setQuote(quoteArr[randomInteger].quote)\n    setAuthor(quoteArr[randomInteger].author)\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <div id='quote-box'>\n        <p id=\"text\">\"{quote}\"</p>\n        <p id=\"author\">- {author}</p>\n        <a\n          href={encodeURI(`https://twitter.com/intent/tweet?text=${quote}`)}\n          id=\"tweet-quote\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Tweet\n        </a>\n        <button id='new-quote' onClick={() => handleNewQuote()}>New Quote</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}